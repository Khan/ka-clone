#!/usr/bin/env bash
set -e

# Delegating script for multiple git pre-push hooks
# This file will call any other pre-push.* files *except* pre-push.sample
#
# Called by "git push" after it has checked the remote status,
# but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#

# Get the path to the directory containing this script.
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Copy STDIN to a variable. (This should be small for this hook!)
STDIN_CONTENT=`cat`

# Configure "pre-push.*" to resolve to an empty set if there are no matches,
# instead of the string "pre-push.*".
shopt -s nullglob

# Execute all pre-push.* handlers.
for hook_handler in $DIR/pre-push.*; do
    # Some people have a `pre-push.sample` file that is in `.git/hooks` by
    # default. Ignore that so that file so that we don't run the sample hook.
    if [ "`basename "$hook_handler"`" != "pre-push.sample" ]
    then
        echo "$STDIN_CONTENT" | "$hook_handler" "$@"
    fi
done
